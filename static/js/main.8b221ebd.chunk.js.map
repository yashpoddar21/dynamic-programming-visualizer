{"version":3,"sources":["PathFinder/Node/Node.jsx","algorithms/palindrome.js","algorithms/wildcard.js","algorithms/subsetsum.js","PathFinder/PathFinder.jsx","Form.js","App.js","serviceWorker.js","index.js"],"names":["Node","extraClassName","this","props","col","row","status","val","id","className","Component","createNode","status_in","Palindrome","state","grid","getInitialGrid","setState","visitedNodes","i","setTimeout","node","document","getElementById","length","isPalindrome","isWildCard","isSubsetSum","stringPalindrome","input2","input3","input4","input5","topic","s","dp","i1","Array","fill","j1","push","left","right","j","palindrome","animate","p","text","pattern","T","charAt","isMatch","nums","sum","parseInt","subsetSum","toString","split","map","t","onClick","visualize","reset","rowIdx","nodeIdx","currentRow","Form","handleInput1Change","event","input1","target","value","handleInput2Change","handleInput3Change","handleInput4Change","handleInput5Change","handleTopicChange","handleSubmit","preventDefault","haveSubmitted","alert","class","onSubmit","type","placeholder","onChange","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b221ebd.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport './Node.css';\n\nexport default class Node extends Component {\n  render() {\n    const {\n      col,\n      row,\n      status,\n      val, \n    } = this.props;\n    var extraClassName;\n    if(status === -1){\n      extraClassName = ''\n    }\n    else if(status === 1){\n      extraClassName = 'node-true'\n    }\n    else if(status === 0){\n      extraClassName = 'node-false'\n    }\n    \n    return (\n      <div id={`node-${row}-${col}`} className={`node ${extraClassName}`}>{val}</div>\n    );\n  }\n}","export function palindrome(s) {\n  const visitedNodes = [];\n  var dp = []; \n    for(var i1 = 0; i1 < s.length;  i1++) {\n        dp[i1] = Array(s.length).fill(false);\n        for(var j1 = 0; j1 < s.length; j1++){\n          visitedNodes.push(createNode(i1 + 1, j1 + 1, 0))\n        }\n        dp[i1][i1] = true;\n        visitedNodes.push(createNode(i1 + 1, i1 + 1, 1))\n    }\n    var left = 0;\n    var right = 0;\n    for(var i = s.length - 1; i >= 0; i--) {\n        for(var j = i + 1; j < s.length; j++) {\n            if(s[i] === s[j]) {\n                if(j - i === 1 || dp[i + 1][j - 1]) {\n                    dp[i][j] = true;\n                    visitedNodes.push(createNode(i + 1, j + 1, 1))\n                    if(j - i > right - left) {\n                        right = j;\n                        left = i;\n                    }\n                }\n            }\n        }\n    }\n    return visitedNodes;\n}\n\nconst createNode = (row, col, status_in) => {\n  return {\n    row,\n    col,\n    status: status_in, \n\n  };\n};\n  \n","export function isMatch(s, p) {\n    const visitedNodes = [];\n    var text=s, pattern=p;\n    var T = [];\n    for (var i = 0; i <= text.length; i++) {\n        T[i] = [];\n        for (var j = 0; j <= pattern.length; j++) {\n            if (i === 0 && j === 0) {\n                T[i][j] = true;\n                visitedNodes.push(createNode(i + 1, j + 1, 1))\n                continue;\n            }\n            if (j === 0) {\n                T[i][j] = false;\n                visitedNodes.push(createNode(i + 1, j + 1, 0))\n                continue;\n            }\n            if (i === 0) { \n                if (pattern.charAt(j - 1) === '*' && j > 0) {\n                    T[i][j] = T[i][j - 1];\n                    if(T[i][j] === true){\n                        visitedNodes.push(createNode(i + 1, j + 1, 1))\n                    }\n                    else{\n                        visitedNodes.push(createNode(i + 1, j + 1, 0))\n                    }\n                }\n                else\n                    T[i][j] = false;\n                    visitedNodes.push(createNode(i + 1, j + 1, 0))\n                continue;\n            }\n            if (text.charAt(i - 1) === pattern.charAt(j - 1) || pattern.charAt(j - 1) === '?') {\n                T[i][j] = T[i - 1][j - 1];\n                if(T[i][j] === true){\n                    visitedNodes.push(createNode(i + 1, j + 1, 1))\n                }\n                else{\n                    visitedNodes.push(createNode(i + 1, j + 1, 0))\n                }\n\n            }\n            else if (pattern[j - 1] === '*') {\n                if (T[i][j - 1] === true || T[i-1][j]=== true){\n                    T[i][j] = true;\n                    visitedNodes.push(createNode(i + 1, j + 1, 1));\n                }   \n                else{\n                    T[i][j] = false;\n                    visitedNodes.push(createNode(i + 1, j + 1, 0));\n                }\n            }            \n            else{\n                T[i][j] = false;\n                visitedNodes.push(createNode(i + 1, j + 1, 0));\n            }\n                \n        }\n    }\n    return visitedNodes;\n  }\n\n  const createNode = (row, col, status_in) => {\n    return {\n      row,\n      col,\n      status: status_in, \n  \n    };\n  };","export function subsetSum(nums, sum) {\n    const dp = [];\n    const visitedNodes = [];\n    sum = parseInt(sum);\n    for(let i = 0; i<= sum; i++){\n        dp[i] = []\n        dp[0][i] = false; \n        visitedNodes.push(createNode(0 + 1, i + 1, 0))\n    }\n    for (let i = 1; i <= nums.length; i++) {\n        for (let j = 0; j <= sum; j++) {\n            if(j - nums[i - 1] >= 0){\n                if(dp[i-1][j] === true){\n                    dp[i][j] = true;\n                    visitedNodes.push(createNode(i + 1, j + 1, 1))\n                }\n                else if(nums[i - 1] === j){\n                    dp[i][j] = true;\n                    visitedNodes.push(createNode(i + 1, j + 1, 1))\n                }\n                else if(dp[i - 1][j - nums[i-1]] === true){\n                    dp[i][j] = true;\n                    visitedNodes.push(createNode(i + 1, j + 1, 1))\n                }\n                else{\n                    dp[i][j] = false; \n                    visitedNodes.push(createNode(i + 1, j + 1, 0))\n                }\n            }\n            else{\n                if(dp[i-1][j] === true){\n                    dp[i][j] = true;\n                    visitedNodes.push(createNode(i + 1, j + 1, 1)); \n                }\n                else if(nums[i - 1] === j){\n                    dp[i][j] = true;\n                    visitedNodes.push(createNode(i + 1, j + 1, 1)); \n                }\n                else{\n                    visitedNodes.push(createNode(i + 1, j + 1, 0)); \n                }\n            }\n        }\n    }\n    return visitedNodes;\n    \n\n}\n\n  \n  const createNode = (row, col, status_in) => {\n    return {\n      row,\n      col,\n      status: status_in, \n  \n    };\n  };","import React, {Component} from 'react';\n\nimport Node from './Node/Node';\nimport {palindrome} from '../algorithms/palindrome';\nimport {isMatch} from '../algorithms/wildcard';\nimport {subsetSum} from '../algorithms/subsetsum';\n\nimport './PathFinder.css';\n\n\nexport default class Palindrome extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        grid: [], \n      };\n    }\n\ncomponentDidMount() {\n    const grid = getInitialGrid();\n    this.setState({grid});\n}\n\nanimate(visitedNodes) {\n    for (let i = 0; i < visitedNodes.length; i++) {\n      setTimeout(() => {\n        const node = visitedNodes[i];\n        if(node.status === 0){\n          document.getElementById(`node-${node.row}-${node.col}`).className =\n          'node node-false';\n        }\n        else if(node.status === 1){\n          document.getElementById(`node-${node.row}-${node.col}`).className =\n          'node node-true';\n        }\n      }, 500 * i);\n    }\n  }\n\n\nvisualize() {\n  var {isPalindrome} = false; \n  var {isWildCard} = false; \n  var {isSubsetSum} = false;\n  const {stringPalindrome, input2, input3, input4, input5, topic} = this.props; \n\n  if(stringPalindrome !== '' && topic === 'Longest Palindromic Substring'){\n      isPalindrome = true; \n  }\n  if(input2 !== '' && input3 !== '' && topic === 'Wild Card Matching'){\n    isWildCard = true; \n  }\n  if(input4 !== '' && input5 !== '' && topic === 'Subset Sum'){\n    isSubsetSum = true; \n  }\n  if(isPalindrome){\n    const visitedNodes = palindrome(stringPalindrome);\n    this.animate(visitedNodes);\n  }\n  else if(isWildCard){\n    const visitedNodes = isMatch(input2, input3);\n    this.animate(visitedNodes);\n  }\n  else if(isSubsetSum){\n    const values = (input4).toString(10).split(\"\").map(function(t){return parseInt(t)})\n    const visitedNodes = subsetSum(values, input5); \n    this.animate(visitedNodes);\n  }\n  else{\n    \n\n  }\n  }\nreset(){\n  for (let row = 0; row < 9; row++) {\n    for (let col = 0; col < 27; col++) {\n      document.getElementById(`node-${row}-${col}`).className =\n          'node node';\n    }\n  }\n}\n\nrender(){\n    const {grid} = this.state; \n    \n    \n    return(\n        <>\n          <button onClick={() => this.visualize()} className = \"visualize-button\">\n          Visualize\n        </button>  \n        <button onClick={() => this.reset()} className = \"reset-button\">\n          Reset\n        </button> \n        <div className = \"grid\">\n            {grid.map((row, rowIdx) => {\n                return (\n                    <div key = {rowIdx}>\n                        {row.map((node, nodeIdx) =>{\n                            const {row, col, val, status} = node;\n                            if(rowIdx === 0 && nodeIdx === 0){\n                              return(\n                                <Node\n                                    key={nodeIdx}\n                                    col={col}\n                                    status = {status}\n                                    val = {val}\n                                    row={row}></Node>\n                                \n                            ); \n                            }\n                            else if(rowIdx === 0 && nodeIdx !== 0){\n                              return(\n                                <Node\n                                    key={nodeIdx}\n                                    col={col}\n                                    status = {status}\n                                    val = {nodeIdx - 1}\n                                    row={row}></Node>\n                            ); \n                            }\n                            else if(rowIdx !== 0 && nodeIdx === 0){\n                              return(\n                                <Node\n                                    key={nodeIdx}\n                                    col={col}\n                                    status = {status}\n                                    val = {rowIdx - 1}\n                                    row={row}></Node>\n                            ); }\n                            else{\n                              return(\n                                <Node\n                                    key={nodeIdx}\n                                    col={col}\n                                    status = {status}\n                                    val = {val}\n                                    row={row}></Node>\n                            ); \n                            } \n                        })}\n                    </div>\n                ); \n                    })}\n                    </div>\n                    </>\n    );\n                }\n            }\n\nconst getInitialGrid = () => {\n  const grid = [];\n  for (let row = 0; row < 9; row++) {\n    const currentRow = [];\n    for (let col = 0; col < 27; col++) {\n      currentRow.push(createNode(col, row));\n    }\n    grid.push(currentRow);\n  }\n  return grid;\n};\n\nconst createNode = (col, row) => {\n    return {\n      col,\n      row,\n      status: -1, \n      val: '', \n    };\n  };\n\n","import React, { Component} from 'react'\nimport PathFinder from './PathFinder/PathFinder';\nimport './Form.css';\n\nclass Form extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tinput1: '',\n\t\t\tinput2: '',\n\t\t\tinput3: '', \n\t\t\tinput4: '', \n\t\t\tinput5: '',\n\t\t\ttopic: 'Longest Palindromic Substring',\n\t\t\thaveSubmitted: false\n\t\t}\n\t}\n\n\thandleInput1Change = event => {\n\t\tthis.setState({\n\t\t\tinput1: event.target.value\n\t\t})\n\t}\n\n\thandleInput2Change = event => {\n\t\tthis.setState({\n\t\t\tinput2: event.target.value\n\t\t})\n\t}\n\thandleInput3Change = event => {\n\t\tthis.setState({\n\t\t\tinput3: event.target.value\n\t\t})\n\t}\n\thandleInput4Change = event => {\n\t\tthis.setState({\n\t\t\tinput4: event.target.value\n\t\t})\n\t}\n\thandleInput5Change = event => {\n\t\tthis.setState({\n\t\t\tinput5: event.target.value\n\t\t})\n\t}\n\n\thandleTopicChange = event => {\n\t\tthis.setState({\n\t\t\ttopic: event.target.value\n\t\t})\n\t}\n\n\n\thandleSubmit = event => {\n        event.preventDefault()\n\t\tthis.setState({haveSubmitted: true})\n\t\talert(\"You have submitted your data, please press visualize to visualize the DP Table\")\n\t}\n\n\n\trender() {\n\t\tconst { input1, input2, input3, input4, input5, topic, haveSubmitted } = this.state;\n\t\t\n\t\tif(haveSubmitted){\n\t\t\treturn(\n\t\t\t\t<>\n\t\t\t\t<div class = \"box\"></div>\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<div className = \"input1\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={input1}\n\t\t\t\t\t\tplaceholder = \"String for Longest Palindromic Substring\"\n\t\t\t\t\t\tonChange={this.handleInput1Change} className = \"input1\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className = \"input2\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype = \"text\"\n\t\t\t\t\t\tvalue={input2}\n\t\t\t\t\t\tonChange={this.handleInput2Change} className = \"input2\"\n\t\t\t\t\t\tplaceholder = \"Text for Wildcard Matching\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className = \"input3\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype = \"text\"\n\t\t\t\t\t\tvalue={input3}\n\t\t\t\t\t\tonChange={this.handleInput3Change} className = \"input3\"\n\t\t\t\t\t\tplaceholder = \"Pattern for Wildcard Matching\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className = \"input4\">\n\t\t\t\t\t<input\n\t\t\t\t\t \ttype = \"text\"\n\t\t\t\t\t\tvalue={input4}\n\t\t\t\t\t\tonChange={this.handleInput4Change} className = \"input4\"\n\t\t\t\t\t\tplaceholder = \"Array without commas, spaces, and brackets\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className = \"input5\">\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype = \"text\"\n\t\t\t\t\t\tvalue={input5}\n\t\t\t\t\t\tonChange={this.handleInput5Change} className = \"input5\"\n\t\t\t\t\t\tplaceholder = \"Target Sum\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className = \"menu-bar\">\n\t\t\t\t\t<select value={topic} onChange={this.handleTopicChange} className = \"option-bar\">\t\n\t\t\t\t\t\t<option value=\"Longest Palindromic Substring\">Longest Palindromic Substring</option>\n\t\t\t\t\t\t<option value=\"Subset Sum\">Subset Sum</option>\n\t\t\t\t\t\t<option value=\"Wild Card Matching\">Wild Card Matching</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<button type=\"submit\" className = \"submit-button\">Submit</button>\n\t\t\t</form>\n\t\t\t<PathFinder stringPalindrome = {input1}\n\t\t\t\t\t\t\tinput2 = {input2} input3 = {input3} input4 = {input4} \n\t\t\t\t\t\t\t\t\t\tinput5 = {input5} topic = {topic}></PathFinder>\n\t\t\t</>\n\t\t\t)\n\t\t}\n\t\telse{\n\t\t\treturn(\n\t\t\t\t<>\n\t\t\t\t<div class = \"box\"></div>\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<div className = \"input1\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={input1}\n\t\t\t\t\t\tplaceholder = \"String for Longest Palindromic Substring\"\n\t\t\t\t\t\tonChange={this.handleInput1Change} className = \"input1\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className = \"input2\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype = \"text\"\n\t\t\t\t\t\tvalue={input2}\n\t\t\t\t\t\tonChange={this.handleInput2Change} className = \"input2\"\n\t\t\t\t\t\tplaceholder = \"Text for Wildcard Matching\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className = \"input3\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype = \"text\"\n\t\t\t\t\t\tvalue={input3}\n\t\t\t\t\t\tonChange={this.handleInput3Change} className = \"input3\"\n\t\t\t\t\t\tplaceholder = \"Pattern for Wildcard Matching\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className = \"input4\">\n\t\t\t\t\t<input\n\t\t\t\t\t \ttype = \"text\"\n\t\t\t\t\t\tvalue={input4}\n\t\t\t\t\t\tonChange={this.handleInput4Change} className = \"input4\"\n\t\t\t\t\t\tplaceholder = \"Array without commas, spaces, and brackets\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className = \"input5\">\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype = \"text\"\n\t\t\t\t\t\tvalue={input5}\n\t\t\t\t\t\tonChange={this.handleInput5Change} className = \"input5\"\n\t\t\t\t\t\tplaceholder = \"Target Sum\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className = \"menu-bar\">\n\t\t\t\t\t<select value={topic} onChange={this.handleTopicChange} className = \"option-bar\">\t\n\t\t\t\t\t\t<option value=\"Longest Palindromic Substring\">Longest Palindromic Substring</option>\n\t\t\t\t\t\t<option value=\"Subset Sum\">Subset Sum</option>\n\t\t\t\t\t\t<option value=\"Wild Card Matching\">Wild Card Matching</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<button type=\"submit\" className = \"submit-button\">Submit</button>\n\t\t\t</form>\n\t\t\t</>\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport default Form","import React, {Component } from 'react';\nimport './App.css';\n\n\nimport Form from './Form'\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Form />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}